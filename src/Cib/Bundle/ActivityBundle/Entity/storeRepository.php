<?php

namespace Cib\Bundle\ActivityBundle\Entity;

use Cib\Bundle\UserBundle\Entity\User;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;

/**
 * storeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class storeRepository extends EntityRepository
{
    public function selectList($search)
    {
        $dql = "SELECT s FROM CibActivityBundle:Store s WHERE (s.storeName LIKE :search)";
        $query = $this->getEntityManager()->createQuery($dql);
        $query->setParameter('search','%'.$search.'%');

        return $signboards = $query->getResult();
    }

    public function selectAjaxStore(EntityManager $em,$search)
    {
        $dql = "SELECT s FROM CibActivityBundle:Store s WHERE (s.storeId = :search)";
        $query = $em->createQuery($dql);
        $query->setParameter('search',$search);

//        if($query->getResult())
//            return $query->getOneOrNullResult();
//        else
//            return new Store();
        return $query->getOneOrNullResult();
    }

    public function getTelecollectesByStore(Store $store)
    {
        $date = new \DateTime();
        $date->modify('-1 day');
        return $this->findBy(array(
            'store' => $store,
            'date' => $date,
        ));
    }

    public function getTelecollecte()
    {
        $date = new \DateTime();
        $date->modify('-1 day');
        $dql = "SELECT e FROM CibDataBundle:Telecollecte e WHERE e.date = '".$date->format('Y-m-d')."'";
        $query = $this->getEntityManager()->createQuery($dql);
        return $query->getResult();
    }

    public function getByUser(User $user, $search = null)
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('s', 'Si')
            ->from('CibActivityBundle:Store', 's')
            ->join('s.signboard',' Si')
            ->where('Si.user = ?1')
            ->andWhere('s.storeName LIKE ?2')
        ->setParameter(1,$user)
        ->setParameter(2,'%'.$search.'%');
        $results = $queryBuilder->getQuery();
        return $results->getResult();
    }

}
